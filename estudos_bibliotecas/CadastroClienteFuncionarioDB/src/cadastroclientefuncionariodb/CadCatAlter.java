/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package cadastroclientefuncionariodb;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class CadCatAlter extends javax.swing.JInternalFrame {

    /**
     * Creates new form CadCatAlter
     */
    public CadCatAlter() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        categoriaNova = new javax.swing.JTextField();
        categoriaEdit = new javax.swing.JTextField();
        btnCadCategoria = new javax.swing.JButton();
        btnEditCategoria = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        jLabel1.setText("Criar/Alterar Categorias");

        jLabel2.setText("Nova Categoria");

        jLabel3.setText("ID Categoria:");

        btnCadCategoria.setText("CADASTRAR CATEGORIA");
        btnCadCategoria.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCadCategoriaMouseClicked(evt);
            }
        });

        btnEditCategoria.setText("EDITAR CATEGORIA");
        btnEditCategoria.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEditCategoriaMouseClicked(evt);
            }
        });

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nome Categoria"
            }
        ));
        jScrollPane1.setViewportView(table);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(categoriaNova, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(btnCadCategoria)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(45, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(categoriaEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(248, 248, 248)
                        .addComponent(btnEditCategoria)
                        .addGap(452, 452, 452))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(463, 463, 463))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(categoriaNova, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCadCategoria))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(categoriaEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEditCategoria))
                .addGap(137, 137, 137)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCadCategoriaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCadCategoriaMouseClicked
        try {
            Connection con = BancoClass.conexaoBanco();
            String sql = "INSERT INTO categoria(descricao) VALUES(?);";
            PreparedStatement stmt = con.prepareStatement(sql);
            stmt.setString(1, categoriaNova.getText());
            stmt.execute();
            con.close();
            stmt.close();
            JOptionPane.showMessageDialog(null, "Categoria cadastrada com sucesso!");
            categoriaNova.setText(null);
        } catch (SQLException ex) {
            Logger.getLogger(CadCatAlter.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            Connection con = BancoClass.conexaoBanco();
            String sql = "SELECT * FROM categoria ORDER BY id_categoria DESC;";
            PreparedStatement stmt = con.prepareStatement(sql);
            ResultSet rs = stmt.executeQuery();
            DefaultTableModel modeloTabela = (DefaultTableModel) table.getModel();
            modeloTabela.setNumRows(0);

            while(rs.next()){
                Object [] dados = {
                    rs.getString("id_categoria"),
                    rs.getString("descricao")};
                modeloTabela.addRow(dados);
            }
            stmt.close();
            rs.close();
            con.close();
        } catch (SQLException ex){
            JOptionPane.showMessageDialog(null, "Categoria não cadastrada!");
        }
    }//GEN-LAST:event_btnCadCategoriaMouseClicked

    private void btnEditCategoriaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditCategoriaMouseClicked
        try{
            Connection con = BancoClass.conexaoBanco();
            String sql = "UPDATE categoria SET descricao = ? WHERE id_categoria = ?;";
            PreparedStatement stmt = con.prepareStatement(sql);
            stmt.setString(1, categoriaNova.getText());
            stmt.setString(2, categoriaEdit.getText());
            stmt.execute();
            con.close();
            stmt.close();
            
            categoriaNova.setText(null);
            categoriaEdit.setText(null);
            
        } catch(SQLException ex){
            JOptionPane.showMessageDialog(null, "Categoria não alterada!");
        }
        try {
            Connection con = BancoClass.conexaoBanco();
            String sql = "SELECT * FROM categoria ORDER BY id_categoria DESC;";
            PreparedStatement stmt = con.prepareStatement(sql);
            ResultSet rs = stmt.executeQuery();
            DefaultTableModel modeloTabela = (DefaultTableModel) table.getModel();
            modeloTabela.setNumRows(0);

            while(rs.next()){
                Object [] dados = {
                    rs.getString("id_categoria"),
                    rs.getString("descricao")};
                modeloTabela.addRow(dados);
            }
            stmt.close();
            rs.close();
            con.close();
        } catch (SQLException ex){
            JOptionPane.showMessageDialog(null, "Categoria não alterada!");
        }
    }//GEN-LAST:event_btnEditCategoriaMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCadCategoria;
    private javax.swing.JButton btnEditCategoria;
    private javax.swing.JTextField categoriaEdit;
    private javax.swing.JTextField categoriaNova;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
